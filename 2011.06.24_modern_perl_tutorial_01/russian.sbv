0:00:04.340,0:00:07.590
Снова добро пожаловать на наш канал! В этот раз

0:00:07.590,0:00:10.319
Я собираюсь представить вам руководство по Perl

0:00:10.319,0:00:13.439
... возможно даже назвав его руководством по Современному Perl'у

0:00:13.439,0:00:16.869
хоть "Современный" и модное словечко,

0:00:16.869,0:00:18.249
но

0:00:18.249,0:00:20.510
в данном случае оно имеет значение.

0:00:20.510,0:00:22.199
Я попытаюсь показать

0:00:22.199,0:00:25.039
приемы, которые

0:00:25.039,0:00:29.429
требуют современные версии Perl,
выпущенные в последние пару лет.

0:00:29.429,0:00:32.970
За основу я возьму Perl 5.010.

0:00:32.970,0:00:36.020
Также я хочу показать вам

0:00:36.020,0:00:39.790
эту книгу,

0:00:39.790,0:00:41.370
которая называется "Modern Perl"

0:00:41.370,0:00:47.200
Я, конечно, не собираюсь полностью следовать этой книге, а
буду пользоваться своим

0:00:47.200,0:00:49.230
обучающим материалом, но

0:00:49.230,0:00:52.780
с некоторыми отличиями, потому что
в этих видеоуроках

0:00:52.780,0:00:54.370
другой формат обучения.

0:00:54.370,0:00:57.990
Я редомендую вам купить эту книгу, или
вы можете скачать

0:00:57.990,0:00:59.280
бесплатно ее PDF-версию.

0:00:59.280,0:01:02.580
Если вы не можете себе позволить купить книгу,

0:01:02.580,0:01:06.120
или просто не хотите тратить на это деньги,
скачайте ее.

0:01:06.120,0:01:08.170
мы покажем ссылку

0:01:08.170,0:01:11.310
позже

0:01:11.310,0:01:12.409
В любом случае ...

0:01:12.409,0:01:15.979
эта книга действительно хорошая и я рекомендую вам

0:01:15.979,0:01:16.990
прочитать ее,

0:01:16.990,0:01:21.690
хоть это и не совсем руководство, или
основы изучения Perl.

0:01:21.690,0:01:25.830
Давайте посмотрим, что мы будем использовать. Мы
возьмем за основу

0:01:25.830,0:01:28.850
дистрибутив Strawberry Perl.

0:01:28.850,0:01:30.859
Вернее, вариацию дистрибутива
Strawberry Perl - 

0:01:30.859,0:01:32.360
Padre

0:01:32.360,0:01:34.520
на пакете Strawberry.

0:01:34.520,0:01:38.080
Мы собираемся использовать именно его, 
хоть мы и могли выбрать любую

0:01:38.080,0:01:39.180
версию Perl,

0:01:39.180,0:01:42.060
чтобы было проще.

0:01:42.060,0:01:45.240
Первый шаг, который надо сделать - посетить сайт

0:01:45.240,0:01:47.950
Padre (http://padre.perlide.org/)

0:01:47.950,0:01:49.220
вы можете видеть его на экране

0:01:49.220,0:01:52.890
нажать на ссылку с загрузками

0:01:52.890,0:01:56.630
и немного прокрутить вниз. Здесь есть ссылка
для скачивания последней версии

0:01:56.630,0:01:58.890
Padre on Strawberry.

0:01:58.890,0:02:00.050
Дистрибутив включает в себя

0:02:00.050,0:02:03.350
компилятор/интерпретатор Perl

0:02:03.350,0:02:05.049
и

0:02:05.049,0:02:09.069
среду разработки, которая
называется Padre

0:02:09.069,0:02:14.370
с множеством модулей, которые понадобятся
для написания кода.

0:02:14.370,0:02:16.459
Поэтому, я рекомендую вам скачать его,

0:02:16.459,0:02:20.879
дважды кликнуть на дистрибутив, и следовать инструкциям

0:02:20.879,0:02:21.849
по установке.

0:02:21.849,0:02:23.599
Как только вы установили Padre, он появится

0:02:23.599,0:02:25.160
в меню Пуск

0:02:25.160,0:02:27.089
Если вы нажмете "Все программы"

0:02:27.089,0:02:31.309
"Strawberry Perl" и кликните
на значок бабочки (голубой),

0:02:31.309,0:02:34.969
откроется среда разработки.

0:02:34.969,0:02:37.349
Как только она открылась, 

0:02:37.349,0:02:40.799
перед вами появилось пустое поле для ввода текста.

0:02:40.799,0:02:43.799
Нам нужно

0:02:43.799,0:02:49.019
пройти в меню Файл -> Новый
(второй вариант) и нажать

0:02:49.019,0:02:50.639
на "Perl 5 Script".

0:02:50.639,0:02:54.789
Вам автоматически сгенерируется скрипт Perl 5.

0:02:54.789,0:02:58.469
Появившийся код я объясню позже.

0:02:58.469,0:03:03.109
Все, что нам нужно - это ввести:

0:03:03.109,0:03:04.629
print "hello world\n";

0:03:04.629,0:03:06.889
Это стандартная инструкция

0:03:06.889,0:03:11.839
И затем нам нужно сохранить файл,
так как нельзя

0:03:11.839,0:03:13.299
запустить несохраненный скрипт.

0:03:13.299,0:03:18.879
Итак, мы сохраняем наш файл

0:03:18.879,0:03:21.849
(назовем его, к примеру, "hw.pl")

0:03:21.849,0:03:25.309
Нажимаем кнопку сохранить.

0:03:25.309,0:03:29.569
После того, как мы сохранили файл, его можно запустить командой
'Run' -> 'Run Script' или нажатием F5

0:03:29.569,0:03:30.709
Появится окно,

0:03:30.709,0:03:32.629
всплыывающее окно,

0:03:32.629,0:03:35.329
и вы увидите надпись "hello world"

0:03:35.329,0:03:39.129
и "Нажмите любую клавишу, чтобы продолжить..."
Это добавляет Windows,

0:03:39.129,0:03:43.409
чтобы позволить нам увидеть окно вывода,
без добавления этой команды

0:03:43.409,0:03:44.640
окно закрылось бы сразу же,

0:03:44.640,0:03:48.039
и мы бы не увидели выведенный текст.

0:03:48.039,0:03:50.839
Просто нажмите любую кнопку, окно закроется

0:03:50.839,0:03:53.579
и вы можете продолжать.

0:03:53.579,0:03:57.659
Итак, это базовый пример написания
самого простого скрипта Perl.

0:03:57.659,0:03:59.380
Давайте посмотрим эти строчки кода.

0:03:59.380,0:04:03.949
Первая из них называется ‘shebang’. Она
используется в системах Unix

0:04:03.949,0:04:08.739
и не играет никакой роли на
ОС Windows.

0:04:08.739,0:04:10.229
Так что для нас это не важно.

0:04:10.229,0:04:12.110
use 5.006;

0:04:12.110,0:04:14.849
Это значит, что

0:04:14.849,0:04:16.799
при запуске скрипта

0:04:16.799,0:04:20.169
система удостоверится, что ваша версия Perl

0:04:20.169,0:04:24.830
хотя бы 5.6.

0:04:24.830,0:04:29.590
На самом деле это очень старая версия
Perl - 

0:04:29.590,0:04:32.209
версия 5.6,

0:04:32.209,0:04:36.389
поэтому, мы будем использовать более новую версию и
требовать соответственно тоже будем ее.

0:04:36.389,0:04:39.739
Поэтому я меняю 5.006 на 5.010

0:04:39.739,0:04:46.510
Это также включит несколько
новых возможностей языка Perl.

0:04:46.510,0:04:51.679
use strict; and use warnings; - два дополнительных

0:04:51.679,0:04:53.470
флага компилятора,

0:04:53.470,0:04:56.639
которые заставляют

0:04:56.639,0:04:57.949
интерпретатор Perl работать

0:04:57.949,0:04:59.169
немного по-другому,

0:04:59.169,0:05:00.699
в более строгом режиме, и

0:05:00.699,0:05:02.919
показывать вам предупреждения

0:05:02.919,0:05:04.729
чтобы избежать

0:05:04.729,0:05:05.389
возможных ошибок.

0:05:05.389,0:05:10.290
Поэтому каждый скрипт я рекомендую
начинать с этих трех

0:05:10.290,0:05:11.110
строчек

0:05:11.110,0:05:14.050
"shebang" в свою очередь не так важен для нас

0:05:14.050,0:05:16.080
Теперь

0:05:16.080,0:05:20.440
вы можете увидеть "print",
ключевое слово Perl

0:05:20.440,0:05:24.340
Любая строка после этой команды должна быть в кавычках,

0:05:24.340,0:05:27.360
а именно в двойных кавычках

0:05:27.360,0:05:29.580
(\n) в данном случае

0:05:29.580,0:05:30.360
значит, что

0:05:30.360,0:05:31.750
после вывода нашей строки,

0:05:31.750,0:05:33.259
будет также выведен

0:05:33.259,0:05:35.449
перевод строки.

0:05:35.449,0:05:38.930
Как вы можете увидеть, выражение заканчивается

0:05:38.930,0:05:40.469
точкой с запятой.

0:05:40.469,0:05:43.430
Так как я использовал

0:05:43.430,0:05:45.169
и потребовал от пользователя версию Perl 5.010 или выше,

0:05:45.169,0:05:46.940
сразу добавилась новая возможность

0:05:46.940,0:05:51.800
языка, которой не было ранее.
Я могу удалить "print" и вместо этого

0:05:51.800,0:05:53.180
ввести "say".

0:05:53.180,0:05:56.069
И вдобавок можно удалить перевод строки

0:05:56.069,0:05:58.960
и теперь, когда я нажимаю F5

0:05:58.960,0:06:02.340
файл автоматически сохраняется и запускается,

0:06:02.340,0:06:04.800
и исходник выводит текст новой версии,

0:06:04.800,0:06:06.939
как видно, он остался таким же.

0:06:06.939,0:06:09.219
Программа по-прежнему работает.

0:06:09.219,0:06:12.929
Поэтому, вы можете немного сократить код,
если вы используете Perl 5.010

0:06:12.929,0:06:15.889
вы можете использовать команду "say", и вам
не обязательно заканчивать фразу переводом строки.

0:06:15.889,0:06:20.429
Хорошо, теперь мы хотим сделать наше
приложение интерактивным.

0:06:20.429,0:06:24.460
Давайте, к примеру, спросим пользователя,

0:06:24.460,0:06:26.340
как его зовут.

0:06:26.340,0:06:29.789
'Как вас зовут?'.

0:06:29.789,0:06:31.969
Итак, мы задаем вопрос.

0:06:31.969,0:06:35.979
Теперь мы должны получить информацию
от пользователя

0:06:35.979,0:06:40.049
Для этого я завожу новую переменную
(первую переменную в нашей программе)

0:06:40.049,0:06:41.629
назовем ее '$name'.

0:06:41.629,0:06:44.449
Я использовал ключевое слово 'my', чтобы создать переменную.

0:06:44.449,0:06:49.389
'my' служит для объявления переменной, а символ доллара ('$')
всегда идет перед скалярной переменной.

0:06:49.389,0:06:50.409
Итак,

0:06:50.409,0:06:52.050
в нашем случае

0:06:52.050,0:06:54.270
имя нашей переменной '$name',

0:06:54.270,0:06:55.030
а затем

0:06:55.030,0:06:58.579
мы используем

0:06:58.579,0:07:00.020
следующий оператор

0:07:00.020,0:07:04.169
который представляет собой чтение из стандартного ввода данных
(с клавиатуры)

0:07:04.169,0:07:05.819
а именно чтение целой строки

0:07:05.819,0:07:06.680
до нажатия пользователем

0:07:06.680,0:07:07.849
кнопки 'Enter'.

0:07:07.849,0:07:11.050
Итак, имя пользователя сохранится в нашу переменную под названием

0:07:11.050,0:07:14.029
'$name', а потом мы выведем ее содержимое.

0:07:14.029,0:07:15.800
Теперь мы говорим пользователю "привет"

0:07:15.800,0:07:19.059
и добавляем '$name'.

0:07:19.059,0:07:23.639
Как вы видите, можно добавлять переменные
в строки и они будут

0:07:23.639,0:07:26.419
выведены на экран.

0:07:26.419,0:07:29.160
Давайте продолжим.

0:07:29.160,0:07:31.270
Запустим наш пример.

0:07:31.270,0:07:32.470
Для этого жмем F5.

0:07:32.470,0:07:37.599
Программа спрашивает, как меня зовут

0:07:37.599,0:07:40.610
я ввожу, к примеру ... 'foo', нажимаю 'Enter' и
она говорит мне 'привет, foo'.

0:07:40.610,0:07:42.549
Отлично.

0:07:42.549,0:07:48.509
Теперь давайте будем более вежливыми и спросим
"Как

0:07:48.509,0:07:51.020
твои дела?".

0:07:51.020,0:07:56.739
Я нажимаю F5, программа спрашивает
мое имя

0:07:56.739,0:07:58.459
меня по-прежнему зовут 'foo'

0:07:58.459,0:08:01.080
и когда появляется приветствие, вы видите, что

0:08:01.080,0:08:04.120
после 'foo' выводится новая строка

0:08:04.120,0:08:06.629
и только потом идет запятая.

0:08:06.629,0:08:09.279
Почему так происходит?

0:08:09.279,0:08:13.289
Когда мы ввели наше имя,
'foo'

0:08:13.289,0:08:15.819
Нам пришлось нажать 'Enter', чтобы

0:08:15.819,0:08:17.059
объяснить

0:08:17.059,0:08:20.520
Windows and Padre Perl, что ввод закончен

0:08:20.520,0:08:24.849
и имя может быть сохранено в переменную '$name'.

0:08:24.849,0:08:28.210
И мы не удалили тот перевод строки, поэтому здесь

0:08:28.210,0:08:31.279
выводится именно он,

0:08:31.279,0:08:35.300
хоть мы и не делаем подобных операций явно
в нашем коде

0:08:35.300,0:08:37.350
и специально для таких случаев,

0:08:37.350,0:08:42.050
в языке Perl есть специальная функция, чтобы
удалить перевод строки.

0:08:42.050,0:08:44.120
Итак, я ввожу 'chomp',

0:08:44.120,0:08:47.300
имя той самой функции для удаления

0:08:47.300,0:08:51.050
перехода на новую строку. Я передаю этой функции
имя переменной.

0:08:51.050,0:08:52.500
Она

0:08:52.500,0:08:55.510
удалит ненужный нам переход.

0:08:55.510,0:08:57.750
Снова запускаем наш скрипт.

0:08:57.750,0:09:01.060
Меня по-прежнему зовут 'foo'

0:09:01.060,0:09:04.760
но в этот раз, как вы видите, перевод строки
удален из приветствия

0:09:04.760,0:09:06.910
и програма по-прежнему работает корректно.

0:09:06.910,0:09:09.860
Я думаю, этого достаточно для

0:09:09.860,0:09:11.200
первого видеоурока.

0:09:11.200,0:09:14.150
Я также собираюсь опубликовать несколько

0:09:14.150,0:09:15.170
упражнений в

0:09:15.170,0:09:19.270
блоге, ассоциированном с этим

0:09:19.270,0:09:20.450
скринкастом.

0:09:20.450,0:09:24.680
Пожалуйста, проследуйте по ссылке ниже, там можно найти
те самые упражнения и затем

0:09:24.680,0:09:26.910
попрактиковаться с ними. Надеюсь увидеться с вами и в
следующих видеоуроках. До свидания!
